# There should be 120 rows for both tasks combined for each subject, so divide amount per subject by 120
table(df_e1$task) / 120
```
## Demographic information
```{r}
# Load subject-wise data
df_subjects = read_csv("../../data/processed/subjects.csv")
nrow(df_subjects)
table(df_subjects$gender)
table(df_subjects$native_speaker)
# One person wrote "test" for age answer
df_subjects$age_numeric = as.numeric(df_subjects$age)
mean(df_subjects$age_numeric, na.rm = TRUE)
sd(df_subjects$age_numeric, na.rm = TRUE)
range(df_subjects$age_numeric, na.rm = TRUE)
```
## Preprocess and merge data
Set response keys for experimental data.
```{r}
df_e1$response = fct_recode(
factor(df_e1$key_press),
"Yes" = "89",
"No" = "78"
)
```
Indicate the correct response, based on whether item was a filler ("No") or not ("Yes").
```{r}
df_e1 = df_e1 %>%
mutate(correct_response = case_when(
type == "filler" ~ "No",
is.na(type) ~ "Yes"
)) %>%
mutate(correct = correct_response == response)
df_ppt_accuracy_plaus = df_e1 %>%
# filter(type == "filler") %>%  ### Do we want to filter to fillers for the plausibility sentences?
filter(task == "plausibility") %>%
group_by(subject) %>%
summarise(plaus_accuracy = mean(correct))
df_ppt_accuracy_plaus %>%
ggplot(aes(x = plaus_accuracy)) +
geom_histogram() +
labs(x = "Accuracy on all plausibility items") +
theme_minimal()
df_ppt_accuracy_recall = df_e1 %>%
filter(type == "filler") %>%
filter(task == "recall") %>%
group_by(subject) %>%
summarise(recall_accuracy = mean(correct))
df_ppt_accuracy_recall %>%
ggplot(aes(x = recall_accuracy)) +
geom_histogram() +
labs(x = "Accuracy on filler recall items") +
theme_minimal()
df_merged = df_e1 %>%
left_join(df_items_gathered, on = c(list, object))
## Label whether or not shape/sentence is listed as matching
df_merged = df_merged %>%
mutate(
match = case_when(
type == "filler" ~ "filler",
version %in% c('aa', 'bb') ~ "yes",
(version %in% c('aa', 'bb')) == FALSE ~ "no"
)
)
df_merged = df_merged %>%
left_join(df_ppt_accuracy_plaus, on = c(subject)) %>%
left_join(df_ppt_accuracy_recall, on = c(subject))
nrow(df_merged)
df_merged_recall_critical = df_merged %>%
filter(task == "recall") %>%
filter(match != "filler")
df_merged_recall_critical %>%
group_by(match) %>%
summarise(accuracy = mean(correct))
df_merged_recall_critical %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = match,
y = correct_numeric)) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
scale_y_continuous(limits = c(0, 1)) +
geom_hline(yintercept = .5, linetype = "dotted") +
labs(x = "Matching shape",
y = "Accuracy") +
theme_minimal()
df_surprisal = read_csv("../../data/processed/bert-large_surprisals.csv")
df_surprisal
df_surprisal = read_csv("../../data/processed/bert-large_surprisals.csv") %>%
mutate(surprisal = -log(probability))
df_merged_recall_critical
View(df_merged_recall_critical)
df_surprisal
df_surprisal = read_csv("../../data/processed/bert-large_surprisals.csv") %>%
mutate(surprisal = -log(probability),
sentence_version = version) %>%
select(object, sentence, probability, surprisal, sentence_version)
df_merged_recall_critical$version
substring
substring("aa", 1)
substring("aa", 1, 1)
substring("ab", 1, 1)
substring("ab", 1, 2)
df_merged_recall_critical %>%
mutate(sentence_version = substring(version, 1, 1))
View(df_merged_recall_critical)
nrow(df_merged_recall_critical)
df_merged_recall_critical = df_merged_recall_critical %>%
mutate(sentence_version = substring(version, 1, 1))
hist(df_surprisal$surprisal)
df_merged_recall_critical$object
df_merged_recall_critical$sentence_version
df_merged_recall_critical$survey_code
df_merged_recall_critical$X1
df_merged_recall_critical_ = df_merged_recall_critical %>%
left_join(df_surprisal)
nrow(df_merged_recall_critical_)
View(df_merged_recall_critical_)
df_surprisal
df_surprisal
df_merged_recall_critical_ = df_merged_recall_critical %>%
left_join(df_surprisal, on = c(object, sentence_version))
df_merged_recall_critical_
df_merged_recall_critical_$surprisal
factor(df_merged_recall_critical_$object)
df_surprisal = read_csv("../../data/processed/bert-large_surprisals.csv") %>%
mutate(surprisal = -log(probability),
sentence_version = version) %>%
select(-X1, object, sentence, probability, surprisal, sentence_version)
df_merged_recall_critical_ = df_merged_recall_critical %>%
left_join(df_surprisal, on = c(object, sentence_version))
View(df_merged_recall_critical_)
df_surprisal$`Unnamed: 0`
df_surprisal = read_csv("../../data/processed/bert-large_surprisals.csv") %>%
mutate(surprisal = -log(probability),
sentence_version = version) %>%
select(-X1, -`Unnamed: 0`,
object, sentence, probability, surprisal, sentence_version)
df_surprisal
df_merged_recall_critical_ = df_merged_recall_critical %>%
left_join(df_surprisal, on = c(object, sentence_version))
View(df_merged_recall_critical_)
View(df_merged_recall_critical_)
table(df_surprisal$sentence_version)
df_surprisal = read_csv("../../data/processed/bert-large_surprisals.csv") %>%
mutate(surprisal = -log(probability),
sentence_version = substring(version, 1, 1)) %>%
select(-X1, -`Unnamed: 0`,
object, sentence, probability, surprisal, sentence_version)
df_merged_recall_critical_ = df_merged_recall_critical %>%
left_join(df_surprisal, on = c(object, sentence_version))
View(df_merged_recall_critical_)
substring("shape_a", 5, 6)
substring("shape_a", 7, 8)
df_surprisal = read_csv("../../data/processed/bert-large_surprisals.csv") %>%
mutate(surprisal = -log(probability),
sentence_version = substring(version, 7, 8)) %>%
select(-X1, -`Unnamed: 0`,
object, sentence, probability, surprisal, sentence_version)
```{r}
df_merged_recall_critical = df_merged_recall_critical %>%
mutate(sentence_version = substring(version, 1, 1))
df_merged_recall_critical_ = df_merged_recall_critical %>%
left_join(df_surprisal, on = c(object, sentence_version))
View(df_merged_recall_critical_)
tabledf_surprisal(se)
table(df_surprisal$sentence_version)
df_merged_recall_critical$sentence_version
factor(df_merged_recall_critical$X1)
table(df_merged_recall_critical$sentence_version)
df_surprisal$sentence_version
df_merged_recall_critical_ = df_merged_recall_critical %>%
select(sentence_version, correct_response, match) %>%
left_join(df_surprisal)
df_merged_recall_critical_
df_merged_recall_critical_ = df_merged_recall_critical %>%
left_join(df_surprisal, on = c(object, sentence_version))
df_merged_recall_critical_$surprisal
df_merged_recall_critical$object
df_merged_recall_critical_ = df_merged_recall_critical %>%
select(object, sentence_version, correct_response, match) %>%
left_join(df_surprisal)
df_merged_recall_critical$object
df_merged_recall_critical_$surprisal
df_merged_recall_critical_ = df_merged_recall_critical %>%
select(subject, object, sentence_version, correct_response, match) %>%
left_join(df_surprisal)
df_merged_recall_critical_
View(df_merged_recall_critical_)
df_merged_recall_critical_surprisal = df_merged_recall_critical %>%
select(subject, object, sentence_version, correct_response, match) %>%
left_join(df_surprisal)
model_full = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match * surprisal +
(1 + match | subject) +
(1 + match | object),
family = binomial())
library(lme4)
model_full = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match * surprisal +
(1 + match | subject) +
(1 + match | object),
family = binomial())
df_merged_recall_critical_surprisal$correct_response
df_merged_recall_critical_surprisal$correct_response
## Not sure why I have to do this, but it's fine
df_merged_recall_critical_surprisal = df_merged_recall_critical %>%
select(subject, object, sentence_version, correct, match) %>%
left_join(df_surprisal)
model_full = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match * surprisal +
(1 + match | subject) +
(1 + match | object),
family = binomial())
summary(model_full)
model_no_interaction = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match + surprisal +
(1 + match | subject) +
(1 + match | object),
family = binomial())
model_full = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match * surprisal +
(1 + match | subject) +
(1 | object),
family = binomial())
model_no_interaction = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match + surprisal +
(1 + match | subject) +
(1 | object),
family = binomial())
anova(model_full, model_no_interaction)
summ = summary(model_full)
summ
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 10)) %>%
ggplot(aes(x = n,
y = correct,
color = match)) +
geom_line(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct,
color = match)) +
geom_line(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_line(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
summ
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 4)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 20)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 8)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95)) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95),
alpha = .6) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
hist(df_merged_recall_critical_surprisal$surprisal)
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(probability, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95),
alpha = .6) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95),
alpha = .6) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
df_surprisal = read_csv("../../data/processed/bert-large_surprisals.csv") %>%
mutate(target_surprisal = -log(target_probability),
location_surprisal = -log(location_probability),
sentence_version = substring(version, 7, 8)) %>%
select(-X1, -`Unnamed: 0`,
object, sentence, target_surprisal, location_surprisal, sentence_version)
df_merged_recall_critical = df_merged_recall_critical %>%
mutate(sentence_version = substring(version, 1, 1))
## Not sure why I have to do this, but it's fine
df_merged_recall_critical_surprisal = df_merged_recall_critical %>%
select(subject, object, sentence_version, correct, match) %>%
left_join(df_surprisal)
model_full = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match * target_surprisal +
(1 + match | subject) +
(1 | object),
family = binomial())
summary(model_full)
model_full = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match * location_surprisal +
(1 + match | subject) +
(1 | object),
family = binomial())
target_surprisal
summary(model_full = glmer(data = df_merged_recall_critical_surprisal,
correct ~ match * location_surprisal +
(1 + match | subject) +
(1 | object),
family = binomial())
)
summary(model_full)
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(target_surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95),
alpha = .6) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(location_surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95),
alpha = .6) +
labs(x = "Surprisal (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
df_merged_recall_critical_surprisal %>%
mutate(n = ntile(target_surprisal, 10)) %>%
mutate(correct_numeric = as.numeric(correct)) %>%
ggplot(aes(x = n,
y = correct_numeric,
color = match)) +
geom_smooth(alpha = .6) +
stat_summary (fun = function(x){mean(x)},
fun.min = function(x){mean(x) - 2*sd(x)/sqrt(length(x))},
fun.max = function(x){mean(x) + 2*sd(x)/sqrt(length(x))},
geom= 'pointrange',
position=position_dodge(width=0.95),
alpha = .6) +
labs(x = "Surprisal of object (binned)",
y = "Accuracy",
title = "Match effect by suprisal",
subtitle = "Stronger effect for less surprising objects")+
theme_minimal()
